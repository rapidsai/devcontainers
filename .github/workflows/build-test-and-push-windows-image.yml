name: Build and test devcontainer images

on:
  workflow_call:
    inputs:
      os:
        type: string
        required: true
        description: Image OS
      repo:
        type: string
        required: true
        description: Image repo
      push:
        type: string
        required: false
        default: false
        description: Whether to push the image
      features:
        type: string
        required: true
        description: JSON list of devcontainer features
      container_env:
        type: string
        required: false
        description: JSON map of default envvars to build into the devcontainer
      syft_ver:
        type: string
        required: false
        default: latest
        description: Syft version for SBOM generation

jobs:

  build-test-and-push:
    name: ${{ matrix.edition }}
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { edition: "2022", runner: "${{ github.repository != 'rapidsai/devcontainers' && 'windows-2022' || 'windows-amd64-cpu4' }}" }
    steps:
      - name: Checkout ${{ github.repository }}
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - id: info
        name: Get container info
        shell: bash
        run: |
          repo="${{ inputs.repo }}";
          cl="${{ fromJSON(inputs.features)[1].version }}";
          cuda="${{ fromJSON(inputs.features)[0].version }}";
          version="$(git describe --abbrev=0 --tags | sed 's/[a-zA-Z]//g' | cut -d '.' -f -2)";
          tag_without_os="${version}-cuda${cuda}-cl${cl}";
          cat <<EOF | tee "$GITHUB_OUTPUT"
          cl=${cl}
          cuda=${cuda}
          repo=${repo,,}
          version=${version}
          tag_without_os=${tag_without_os}
          tag=${tag_without_os}-${{ inputs.os }}${{ matrix.edition }}
          EOF

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.GPUCIBOT_DOCKERHUB_USER || vars.DOCKERHUB_USER }}
          password: ${{ secrets.GPUCIBOT_DOCKERHUB_TOKEN || secrets.DOCKERHUB_TOKEN }}

      - name: Build ${{ steps.info.outputs.tag }}
        uses: ./.github/actions/build-windows-image
        with:
          cl: "${{ steps.info.outputs.cl }}"
          tag: "${{ steps.info.outputs.tag }}"
          cuda: "${{ steps.info.outputs.cuda }}"
          repo: "${{ steps.info.outputs.repo }}"
          version: "${{ steps.info.outputs.version }}"
          edition: "${{ matrix.edition }}"
          syft_ver: "${{ inputs.syft_ver }}"

      - name: Test ${{ steps.info.outputs.tag }}
        uses: ./.github/actions/test-windows-image
        with:
          cl: "${{ steps.info.outputs.cl }}"
          tag: "${{ steps.info.outputs.tag }}"
          cuda: "${{ steps.info.outputs.cuda }}"
          repo: "${{ steps.info.outputs.repo }}"
          version: "${{ steps.info.outputs.version }}"
          edition: "${{ matrix.edition }}"

      - if: inputs.push == 'true'
        name: Push ${{ steps.info.outputs.tag }}
        shell: powershell
        run: |
          docker image tag ${{ steps.info.outputs.repo }}:${{ steps.info.outputs.tag }} ${{ steps.info.outputs.repo }}:${{ steps.info.outputs.tag_without_os }}
          docker push ${{ steps.info.outputs.repo }}:${{ steps.info.outputs.tag_without_os }}
          docker push ${{ steps.info.outputs.repo }}:${{ steps.info.outputs.tag }}
