name: Build all RAPIDS repositories

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_call:

jobs:
  check-event:
    name: Check GH Event
    runs-on: ubuntu-latest
    outputs:
      ok: ${{ steps.check_gh_event.outputs.ok }}
    steps:
      - id: check_gh_event
        name: Check GH Event
        shell: bash
        run: |
          [[ '${{ github.event_name }}' == 'push' && '${{ github.repository }}' == 'rapidsai/devcontainers' ]] || \
          [[ '${{ github.event_name }}' == 'schedule' && '${{ github.repository }}' == 'rapidsai/devcontainers' ]] || \
          [[ '${{ github.event_name }}' == 'pull_request' && '${{ github.repository }}' != 'rapidsai/devcontainers' ]] \
          && echo "ok=true"  | tee -a $GITHUB_OUTPUT \
          || echo "ok=false" | tee -a $GITHUB_OUTPUT;

  build-all-rapids-repos:
    name: RAPIDS
    if: needs.check-event.outputs.ok == 'true'
    needs: check-event
    secrets: inherit
    uses: rapidsai/shared-workflows/.github/workflows/build-in-devcontainer.yaml@branch-25.06
    permissions:
      actions: read
      packages: read
      id-token: write
      contents: read
      pull-requests: read
    with:
      arch: '["amd64", "arm64"]'
      cuda: '["12.8"]'
      node_type: cpu8
      extra-repo-deploy-key: CUMLPRIMS_SSH_PRIVATE_DEPLOY_KEY
      rapids-aux-secret-1: GIST_REPO_READ_ORG_GITHUB_TOKEN
      build_command: |
        # Repopulate the cache
        export SCCACHE_RECACHE=1

        # Prevent the sccache server from shutting down
        export SCCACHE_IDLE_TIMEOUT=0

        # Infinitely retry transient errors
        export SCCACHE_DIST_MAX_RETRIES=inf

        # Never fallback to locally compiling
        export SCCACHE_DIST_FALLBACK_TO_LOCAL_COMPILE=false

        # Install the latest sccache client
        devcontainer-utils-install-sccache --repo trxcllnt/sccache;

        # Configure the sccache client to talk to the build cluster
        devcontainer-utils-init-sccache-dist         \
          --enable-sccache-dist                      \
          - <<< "--auth-token '$RAPIDS_AUX_SECRET_1' \
                 --auth-type 'token'                 \
        ";

        # Verify sccache cache location
        sccache --show-adv-stats;

        # Clone all the repos
        clone-all -j$(nproc) -v -q --clone-upstream --single-branch --shallow-submodules --no-update-env;

        # Create the python env without ninja.
        # ninja -j10000 fails with `ninja: FATAL: pipe: Too many open files`.
        # This appears to have been fixed 13 years ago (https://github.com/ninja-build/ninja/issues/233),
        # so that fix needs to be integrated into the kitware pip ninja builds.
        rapids-post-start-command --exclude <(echo ninja);

        # Configure all the C++ libs
        configure-all                 \
          -j100000                    \
          -Wno-dev                    \
          -DBUILD_TESTS=ON            \
          -DBUILD_BENCHMARKS=ON       \
          -DBUILD_PRIMS_BENCH=ON      \
          -DBUILD_SHARED_LIBS=ON      \
          -DRAFT_COMPILE_LIBRARY=ON   \
          -DBUILD_CUGRAPH_MG_TESTS=ON ;

        # Build all the libs
        build-all -j100000;

        # Print cache and dist stats
        sccache --show-adv-stats;
